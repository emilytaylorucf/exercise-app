{"version":3,"sources":["components/DurationExercise/index.js","components/RepetitionExercise/index.js","components/AnimeShow/index.js","components/ComedyShow/index.js","App.js","reportWebVitals.js","index.js"],"names":["DurationExercise","props","state","minutes","seconds","value","exName","this","myInterval","setInterval","setState","clearInterval","buttonStyle","backgroundColor","color","borderColor","style","borderStyle","borderWidth","width","padding","onClick","startTimer","stopTimer","React","Component","RepetitionExercise","counter","AnimeShow","name","tvname","genre","description","headStyle","ComdeyShow","MENU","DURATION","REPETITION","ANIME","COMEDY","MenuScreen","currentScreen","selectedItem","undefined","screen","exType","map","exercise","show","ComedyShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.716a8d9b.chunk.js","sourcesContent":["import React from \"react\"\r\n//Followed timer guide and adjusted it. Found at https://betterprogramming.pub/building-a-simple-countdown-timer-with-react-4ca32763dda7\r\nclass DurationExercise extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minutes: 0,\r\n            seconds: 0,\r\n            value: this.props.exName\r\n        }\r\n    }\r\n    //This code is from the demo. Originally was componentWillMount but I changed it to attatch to start button onClick\r\n    startTimer() {\r\n        this.myInterval = setInterval(() => {\r\n            this.setState(({ seconds }) => ({\r\n                seconds: seconds + 1\r\n            }))\r\n        }, 1000)\r\n\r\n    }\r\n    //This code is also from the demo as componentUnmount, but I changed it to clear the interval, reset the timer, and be attatced to the button rather than unmounting\r\n    stopTimer() {\r\n        clearInterval(this.myInterval);\r\n        this.setState(({ seconds }) => ({\r\n            seconds: seconds - seconds\r\n        }));\r\n    }\r\n    //The <p>Duration: </p> code follows the tutorial in the source linked at the top of the file. I used it to help format my seconds to show double digits\r\n    render() {\r\n        const headStyle = {\r\n            color: \"white\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"5px\",\r\n            borderColor: \"#90e0ef\",\r\n            width: \"fit-content\",\r\n            padding: \"5px\",\r\n            backgroundColor: \"#fec5bb\"\r\n          }\r\n      \r\n          const buttonStyle ={\r\n            backgroundColor: \"#90e0ef\",\r\n            color: \"white\",\r\n            borderColor: \"#fec5bb\"\r\n          }\r\n\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            <>\r\n                <h2 style={headStyle}>{this.state.value}</h2>\r\n                <p style={buttonStyle}>Duration: {minutes} : {seconds < 10 ? `0${seconds}` : seconds}</p>\r\n                <button style={buttonStyle} onClick={() => this.startTimer()}>Start</button>\r\n                <button style={buttonStyle} onClick={() => this.stopTimer()}>Reset</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DurationExercise","import React from \"react\"\r\n\r\nclass RepetitionExercise extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            counter: 0,\r\n            value: this.props.exName\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const headStyle = {\r\n            color: \"white\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"5px\",\r\n            borderColor: \"#90e0ef\",\r\n            width: \"fit-content\",\r\n            padding: \"5px\",\r\n            backgroundColor: \"#fec5bb\"\r\n          }\r\n      \r\n          const buttonStyle ={\r\n            backgroundColor: \"#90e0ef\",\r\n            color: \"white\",\r\n            borderColor: \"#fec5bb\"\r\n          }\r\n\r\n        return (\r\n            <>\r\n                <h2 style={headStyle}>{this.state.value}</h2>\r\n                <p style={buttonStyle}>Reps: {this.state.counter}</p>\r\n                <button style={buttonStyle} onClick={() => { this.setState({ counter: this.state.counter + 1 }) }}>Add Rep</button>\r\n                <button style={buttonStyle} onClick={() => { this.setState({ counter: 0 }) }}>Reset</button>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RepetitionExercise","import React from \"react\"\r\n\r\nclass AnimeShow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.tvname,\r\n            genre: this.props.genre,\r\n            description: this.props.description\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const headStyle = {\r\n            color: \"white\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"5px\",\r\n            borderColor: \"#90e0ef\",\r\n            width: \"fit-content\",\r\n            padding: \"5px\",\r\n            backgroundColor: \"#fec5bb\"\r\n          }\r\n      \r\n          const buttonStyle ={\r\n            backgroundColor: \"#90e0ef\",\r\n            color: \"white\",\r\n            borderColor: \"#fec5bb\"\r\n          }\r\n\r\n        return(\r\n        <>\r\n        <h2 style={headStyle}>{this.state.name}</h2>\r\n        <h3 style={headStyle}>Genre: {this.state.genre}</h3>\r\n        <p style={{color: \"white\", backgroundColor: \"#90e0ef\"}}>{this.state.description}</p>\r\n\r\n        </>)\r\n    }\r\n\r\n}\r\nexport default AnimeShow","import React from \"react\"\r\n\r\nclass ComdeyShow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.tvname,\r\n            genre: this.props.genre,\r\n            description: this.props.description\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const headStyle = {\r\n            color: \"white\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"5px\",\r\n            borderColor: \"#90e0ef\",\r\n            width: \"fit-content\",\r\n            padding: \"5px\",\r\n            backgroundColor: \"#fec5bb\"\r\n          }\r\n      \r\n          const buttonStyle ={\r\n            backgroundColor: \"#90e0ef\",\r\n            color: \"white\",\r\n            borderColor: \"#fec5bb\"\r\n          }\r\n\r\n        return(\r\n        <>\r\n        <h2 style ={headStyle}>{this.state.name}</h2>\r\n        <h3 style ={headStyle}>Genre: {this.state.genre}</h3>\r\n        <p style={{color: \"white\", backgroundColor: \"#90e0ef\"}}>{this.state.description}</p>\r\n        </>)\r\n    }\r\n}\r\nexport default ComdeyShow","import React from \"react\"\nimport './App.css';\nimport DurationExercise from \"./components/DurationExercise\";\nimport RepetitionExercise from \"./components/RepetitionExercise\";\nimport AnimeShow from \"./components/AnimeShow\";\nimport ComedyShow from \"./components/ComedyShow\";\n\nconst MENU = \"menu\"\nconst DURATION = \"duration\"\nconst REPETITION = \"repetition\"\nconst ANIME = \"anime\"\nconst COMEDY = \"comedy\"\n\n\nclass MenuScreen extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { currentScreen: MENU, selectedItem: undefined }\n  }\n  render() {\n    const headStyle = {\n      color: \"white\",\n      borderStyle: \"solid\",\n      borderWidth: \"5px\",\n      borderColor: \"#90e0ef\",\n      padding: \"5px\",\n      backgroundColor: \"#fec5bb\"\n    }\n\n    const buttonStyle ={\n      backgroundColor: \"#90e0ef\",\n      color: \"white\",\n      borderColor: \"#fec5bb\"\n    }\n\n    let exercises = [\n      { exName: \"Sprint\", exType: \"duration\" },\n      { exName: \"Jog\", exType: \"duration\" },\n      { exName: \"Jumping Jacks\", exType: \"repetition\" },\n      { exName: \"Sit Ups\", exType: \"repetition\" }\n    ]\n\n    let watchlist = [\n      { tvname: \"Attack on Titan\", genre: \"anime\", description: \"Humanity is trapped within walled cities to protect them from the Titans. When the Titans breach the wall, will humanity be able to hang on to survival?\"  },\n      { tvname: \"The Big Bang Theory\", genre: \"comedy\", description: \"Four brilliant scientists making their way though experimentation, relationships, and shenanigans\" },\n      { tvname: \"Demon Slayer\", genre: \"anime\", description: \"Tanjiro's family has been slain by demons, and his sister turned in to one. He must fight off demons to protect his sister Nezuko and find the cure to turn her back to her human form\" },\n      { tvname: \"Friends\", genre: \"comedy\", description: \"A group of friends living in NYC try and navigate life with plenty of shenanigans, romance, and fun\" }\n    ]\n\n    let screen\n    switch (this.state.currentScreen) {\n      case MENU:\n        screen = (<>\n          <h1 style={headStyle}>Emily's Exercise App</h1>\n          <br></br>\n          <p style={{color: \"#fec5bb\"}}>Welcome to Emily's Exercise App! \n          Here we are focused on fitness while having fun. Below is a specialized plan with an enjoyable watch list. \n          We hope you enjoy!</p>\n          <br></br>\n          <h2 style={headStyle}>Workout Routine</h2>\n          <p style={{color: \"#fec5bb\"}}>Your workout routine!</p>\n          <>\n            {exercises.map((exercise) =>\n              exercise.exType == \"repetition\" ? (\n                <button style={buttonStyle} onClick={() => this.setState({ currentScreen: REPETITION, selectedItem: exercise })}>{exercise.exName}</button>\n              ) : (\n                  <button style={buttonStyle} onClick={() => this.setState({ currentScreen: DURATION, selectedItem: exercise })}>{exercise.exName}</button>\n                ) \n\n            )}\n          </>\n          <h2 style={headStyle}>Exercise Watch List</h2>\n          <p style={{color: \"#fec5bb\"}}>Some TV shows to watch while you work out!</p>\n          <>\n              {watchlist.map((show) =>\n                show.genre == \"anime\" ? (\n                  <button style={buttonStyle} onClick={() => this.setState({ currentScreen: ANIME, selectedItem: show })}>{show.tvname}</button>\n                ) : (\n                    <button style={buttonStyle} onClick={() => this.setState({ currentScreen: COMEDY, selectedItem: show})}>{show.tvname}</button>\n                )\n                )}\n          </>\n        </>)\n        break\n      case DURATION:\n        screen = \n        <>\n        <DurationExercise {...this.state.selectedItem}></DurationExercise>\n        <button style={buttonStyle} onClick={() => this.setState({currentScreen: MENU})}>Home</button>\n        </>\n        break\n      case REPETITION:\n        screen = \n        <>\n        <RepetitionExercise {...this.state.selectedItem}></RepetitionExercise>\n        <button style={buttonStyle} onClick={() => this.setState({currentScreen: MENU})}>Home</button>\n        </>\n        break\n      case ANIME:\n        screen = \n        <>\n        <AnimeShow {...this.state.selectedItem}></AnimeShow>\n        <button style={buttonStyle} onClick={() => this.setState({currentScreen: MENU})}>Home</button>\n        </>\n        break\n      case COMEDY:\n        screen = \n        <>\n        <ComedyShow {...this.state.selectedItem}></ComedyShow>\n        <button style={buttonStyle} onClick={() => this.setState({currentScreen: MENU})}>Home</button>\n        </>\n        break\n    }\n    return screen\n  }\n}\n\nexport default MenuScreen","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}